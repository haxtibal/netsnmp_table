1. Table queries

Query works with SNMPv1. Note: only possible with getnext, as getbulk is not available in v1.
(draft)

Query works with SNMPv2c.
(implemented)

A table can be queried all at once.
(implemented)

A table with multiple indexes can be queried, where the query is limited to outermost sub-indexes.
(implemented)

A row can be queried exactly. (possible at all? getnext/getbulk may be not suitable)
(draft)

A table containing "wholes" can be queried without errors.
(draft)

integer-valued indexes are supported.
(implemented)

string-valued, fixed-length string indexes are supported.
Example: idx = "dave"  =  4.'d'.'a'.'v'.'e'.
(implemented)

string-valued, variable-length strings indexes are supported.
Note: These indexes are marked as IMPLIED in MIB, and can only appear as last index for a table. 
Example: idx = "dave"  =  'd'.'a'.'v'.'e'.
(draft)

object identifier-valued - preceded by the IMPLIED keyword - indexes are supported.
(draft)

object identifier-valued - preceded by the IMPLIED keyword - indexes are supported.
(draft)

IpAddress-valued indexes are supported.
(draft)



2. Table options

max_repeaters is adjustable for getbulk requests. Default value is 10.
(implemented)



3. Table structure

Table structure is determined automatically (from MIBs). The table root node must be supplied. 
(implemented)



4. Output format

Results are provided as dictionary of dictionaries.
(implemented)

Key of the outer dictionary is a tuple containing one or more row indexes.
(implemented)

Key of the inner dictionary is the column OID string, as it is defined in the MIB.
(implemented)

Column instance values are stored as the values of the inner dictionary.
(implemented)

Column instance values are represented as their equivalent python type.
Note: Done in accordance to the netsnmp python bindings get* methods.
SMIv2 base type mapping: INTEGER -> int, OCTET STRING -> string, OBJECT IDENTIFIER -> ?
SMIv2 application-defined: Integer32 -> int, IpAddress -> ?, Counter32 -> ?, Gauge32 ->?, Unsigned32 -> ?, TimeTicks, Opaque, and Counter64.
(draft)



5. Error Handling

Querying a host without SNMP agent results in reasonable error response. (Excpetion?)

Querying a table without any entry results in an empty dictionary.

Querying when required MIBs are not available results in reasonable error response. (Excpetion?)
